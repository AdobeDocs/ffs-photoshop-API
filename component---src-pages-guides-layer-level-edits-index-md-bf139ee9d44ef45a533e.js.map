{"version":3,"file":"component---src-pages-guides-layer-level-edits-index-md-bf139ee9d44ef45a533e.js","mappings":"0TAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,qBACJ,sBACJA,EAAAA,EAAAA,KAAA,SAAI,iLACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,sCACJ,wCACJA,EAAAA,EAAAA,KAAA,SAAI,YAAWA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,uBAAoC,kHAC/EH,EAAAA,EAAAA,KAAA,SAAI,sFAAqFA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,kBAA+B,gGACpJH,EAAAA,EAAAA,KAAA,SAAI,QAAOA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,OAAoB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,QAAqB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,QAAqB,SAAQH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,UAAuB,uIAClOH,EAAAA,EAAAA,KAAA,SAAI,QAAOA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,OAAoB,SAAQH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,QAAqB,mDAAkDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,eAA4B,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,eAA4B,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,cAA2B,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,aAA0B,QAAOH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,gBAA6B,0CACldH,EAAAA,EAAAA,KAAA,SAAI,8GACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,2BACJ,4BACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,6BACJ,8BACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,kBACX,2rBAkCNH,EAAAA,EAAAA,KAAA,MACE,GAAM,iCACJ,kCACJA,EAAAA,EAAAA,KAAA,SAAI,wCAAuCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,sBAAmC,8CAC1GH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,kBACX,64BAwCNH,EAAAA,EAAAA,KAAA,SAAI,6HAA4HA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC1I,KAAQ,6CACN,kCAAsC,MAC5CH,EAAAA,EAAAA,KAAA,MACE,GAAM,yBACJ,0BACJA,EAAAA,EAAAA,KAAA,SAAI,yEAAwEA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,cAA2B,cAAaH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,eAA4B,MACxMH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,kBACX,g9BA4CNH,EAAAA,EAAAA,KAAA,SAAI,6HAA4HA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC1I,KAAQ,6CACN,kCAAsC,KAGhD,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/layer_level_edits/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ffs-photoshop-API/ffs-photoshop-API/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layer-level-edits\"\n    }}>{`Layer level edits`}</h1>\n    <p>{`Perform various operations on layers within Photoshop files, including adding, editing, and deleting layers, working with adjustment layers, pixel layers, and shape layers.`}</p>\n    <h2 {...{\n      \"id\": \"adding-editing-and-deleting-layers\"\n    }}>{`Adding, editing and deleting layers`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`/documentOperations`}</inlineCode>{` API to make layer and/or document level edits to your PSD and then generate new renditions with the changes.`}</p>\n    <p>{`You can pass in a flat array of only the layers that you wish to act upon, in the `}<inlineCode parentName=\"p\">{`options.layers`}</inlineCode>{` argument of the request body. Use the layer ID to identify the correct layers in your PSD.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`add`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`edit`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`move`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`delete`}</inlineCode>{` blocks indicate the action to be taken on a layer object. Any layer block that's missing one of these attributes will be ignored.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`add`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`move`}</inlineCode>{` blocks must also supply one of the attributes `}<inlineCode parentName=\"p\">{`insertAbove`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`insertBelow`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`insertInto`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`insertTop`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`insertBottom`}</inlineCode>{` to indicate where to move the layer.`}</p>\n    <p>{`Adding a new layer doesn't require the inclusion of a layer ID. The service will generate a new layer ID.`}</p>\n    <h2 {...{\n      \"id\": \"implementation-examples\"\n    }}>{`Implementation examples`}</h2>\n    <h3 {...{\n      \"id\": \"making-an-edit-to-a-layer\"\n    }}>{`Making an edit to a layer`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/pie/psdService/documentOperations \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n  \"inputs\":[\n    {\n      \"href\":\"<your_signed_get_url>\",\n      \"storage\":\"<your_storage>\"\n    }\n  ],\n  \"options\":{\n    \"layers\":[\n      {\n        \"edit\":{},    \n        \"id\":750,\n        \"index\":1,\n        \"locked\":true,\n        \"name\":\"HeroImage\",\n        \"type\":\"smartObject\",\n        \"visible\":true\n      }\n    ]\n  },\n  \"outputs\":[\n    {\n      \"href\":\"<your_signed_post_url>\",\n      \"storage\":\"<your_storage>\",\n      \"type\":\"vnd.adobe.photoshop\"\n    }\n  ]\n}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"adding-a-new-adjustment-layer\"\n    }}>{`Adding a new adjustment layer`}</h3>\n    <p>{`This example shows how to add a new `}<inlineCode parentName=\"p\">{`brightnessContrast`}</inlineCode>{` adjustment layer to the top of your PSD:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/pie/psdService/documentOperations \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n  \"inputs\":[\n    {\n      \"href\":\"<SIGNED_GET_URL>\",\n      \"storage\":\"<storage>\"\n    }\n  ],\n  \"options\":{\n    \"layers\":[\n      {                                       \n        \"add\":{                             \n          \"insertAbove\": {\n            \"id\": 549\n          }                   \n        },\n        \"adjustments\":{\n          \"brightnessContrast\":{\n            \"brightness\":25,\n            \"contrast\":-40\n          }\n        },\n        \"name\":\"NewBrightnessContrast\",\n        \"type\":\"adjustmentLayer\"             \n      }\n    ]\n  },\n  \"outputs\":[\n    {\n      \"href\":\"<SIGNED_POST_URL>\",\n      \"storage\":\"<storage>\",\n      \"type\":\"image/jpeg\"\n    }\n  ]\n}'\n`}</code></pre>\n    <p>{`A call to this API initiates an asynchronous job and returns a response containing an href. Use the value in the href to `}<a parentName=\"p\" {...{\n        \"href\": \"/ffs-photoshop-API/guides/get_job_status/\"\n      }}>{`poll for the status of the job`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"editing-a-pixel-layer\"\n    }}>{`Editing a pixel layer`}</h3>\n    <p>{`In this example we replace the image in an existing pixel layer, the `}<inlineCode parentName=\"p\">{`Hero Image`}</inlineCode>{` layer in `}<inlineCode parentName=\"p\">{`Example.psd`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/pie/psdService/documentOperations \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n  \"inputs\":[\n    {\n      \"href\":\"<SIGNED_GET_URL>\",\n      \"storage\":\"<your_storage>\"\n    }\n  ],\n  \"options\":{\n    \"layers\":[\n      {\n        \"edit\":{},                   \n        \"input\":{                                      \n          \"href\":\"<SIGNED_GET_URL>\",\n          \"storage\":\"<your_storage>\"\n        },\n        \"bounds\":{\n          \"height\":405,\n          \"left\":0,\n          \"top\":237,\n          \"width\":300\n        },\n        \"id\":751,\n        \"index\":2,\n        \"locked\":false,\n        \"name\":\"BackgroundGradient\",\n        \"type\":\"layer\",\n        \"visible\":true\n      }\n    ]\n  },\n  \"outputs\":[\n    {\n      \"href\":\"<SIGNED_POST_URL>\",\n      \"storage\":\"<your_storage>\",\n      \"type\":\"vnd.adobe.photoshop\"\n    }\n  ]\n}'\n`}</code></pre>\n    <p>{`A call to this API initiates an asynchronous job and returns a response containing an href. Use the value in the href to `}<a parentName=\"p\" {...{\n        \"href\": \"/ffs-photoshop-API/guides/get_job_status/\"\n      }}>{`poll for the status of the job`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}