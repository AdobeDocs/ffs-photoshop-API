{"version":3,"file":"component---src-pages-guides-using-fill-mask-index-md-aab1885cb99e20c93ff2.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/using-fill-mask/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ffs-photoshop-API/ffs-photoshop-API/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"inpainting-with-fill-mask\"\n    }}>{`Inpainting with Fill Mask`}</h1>\n    <p>{`Learn how to use the Fill Masked Areas API in your code workflows by performing the image inpainting task in this guide.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`This guide uses the Fill Masked Areas API to perform an image inpainting task.`}</p>\n    <p>{`Image inpainting is one of the fundamental tasks in computer vision and has many practical applications, such as object removal and manipulation, image re-targeting, image compositing, and 3D effects.`}</p>\n    <p>{`The API accepts an input image and an input mask indicating the hole(s) on the image and returns an image with the hole(s) filled.`}</p>\n    <h2 {...{\n      \"id\": \"about-the-fill-masked-areas-api\"\n    }}>{`About the Fill Masked Areas API`}</h2>\n    <p>{`Before getting into the code, let's consider conceptually how the Fill Masked Areas API works at a high level.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You begin with a source image, which can be used with one of the supported cloud storage providers.`}</li>\n      <li parentName=\"ul\">{`You then provide a `}<em parentName=\"li\">{`masked`}</em>{` version of the image. That mask will be where the Photoshop API will add generated content.`}</li>\n    </ul>\n    <p>{`Now, let's start the exercise.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Valid credentials. If you don't have them yet, first visit the Firefly Services `}<a parentName=\"li\" {...{\n          \"href\": \"../index.md\"\n        }}>{`Getting Started`}</a>{` guide to obtain a `}<inlineCode parentName=\"li\">{`client_id`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`client_secret`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Node.js installed on your machine and basic familiarity with `}<inlineCode parentName=\"li\">{`JavaScript`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Store the source and mask images below in a supported cloud storage provider.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"source-image\"\n    }}>{`Source image`}</h3>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"100%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/5530d/source-image-fillMask.webp 320w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/0c8fb/source-image-fillMask.webp 640w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/94b1e/source-image-fillMask.webp 1280w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/0b34d/source-image-fillMask.webp 1920w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/96d48/source-image-fillMask.webp 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/8980b/source-image-fillMask.jpg 320w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/56d4e/source-image-fillMask.jpg 640w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/62aaf/source-image-fillMask.jpg 1280w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/aaf92/source-image-fillMask.jpg 1920w\", \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/09658/source-image-fillMask.jpg 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/jpeg\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/ffs-photoshop-API/static/c003971280888f9afcc622c8c3548ac4/62aaf/source-image-fillMask.jpg\",\n            \"alt\": \"Source image\",\n            \"title\": \"Source image\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h3 {...{\n      \"id\": \"mask-image\"\n    }}>{`Mask image`}</h3>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"100%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/5530d/mask-image-fillMask.webp 320w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/0c8fb/mask-image-fillMask.webp 640w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/94b1e/mask-image-fillMask.webp 1280w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/0b34d/mask-image-fillMask.webp 1920w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/96d48/mask-image-fillMask.webp 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/8980b/mask-image-fillMask.jpg 320w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/56d4e/mask-image-fillMask.jpg 640w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/62aaf/mask-image-fillMask.jpg 1280w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/aaf92/mask-image-fillMask.jpg 1920w\", \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/09658/mask-image-fillMask.jpg 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/jpeg\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/ffs-photoshop-API/static/965cac24c1b0dcd7d3fb911037e7ed2d/62aaf/mask-image-fillMask.jpg\",\n            \"alt\": \"Mask image\",\n            \"title\": \"Mask image\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"calling-the-fill-masked-areas-api\"\n    }}>{`Calling the Fill Masked Areas API`}</h2>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../api/\"\n      }}>{`v1/mask-objects`}</a>{` endpoint first to generate masks to provide in your requests to this endpoint.`}</p>\n    <p>{`A simple example of the request body required to use the API is below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"image\": {\n    \"source\": {\n      \"url\": \"<source_image_url>\"\n    }\n  },\n  \"masks\": [\n    {\n      \"source\": {\n        \"url\": \"<mask_image_url>\"\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`The source of the images, take pre-signed URLs from the cloud storage provider.`}</p>\n    <InlineAlert variant=\"info\" slots=\"header, text\" mdxType=\"InlineAlert\" />\n    <p>{`NOTE`}</p>\n    <p>{`The Photoshop API has a `}<inlineCode parentName=\"p\">{`mask-objects`}</inlineCode>{` endpoint that can be used to create masks for an operation like inpainting.`}</p>\n    <h2 {...{\n      \"id\": \"generated-result\"\n    }}>{`Generated result`}</h2>\n    <p>{`You can see in the image below that by masking the dog, and then filling that masked area, the API has generated a new image with the dog removed.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"100%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/5530d/result-fillMask.webp 320w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/0c8fb/result-fillMask.webp 640w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/94b1e/result-fillMask.webp 1280w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/0b34d/result-fillMask.webp 1920w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/96d48/result-fillMask.webp 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/dd4a7/result-fillMask.png 320w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/0f09e/result-fillMask.png 640w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/bbbf7/result-fillMask.png 1280w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/ac7a9/result-fillMask.png 1920w\", \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/2eb59/result-fillMask.png 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/ffs-photoshop-API/static/44fc41924f66a0b90f4acb719da4d173/bbbf7/result-fillMask.png\",\n            \"alt\": \"Generated Result\",\n            \"title\": \"Generated Result\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"complete-sample-code\"\n    }}>{`Complete sample code`}</h2>\n    <p>{`If it's helpful to see a complete implementation, we've provide the full JavaScript code sample.`}</p>\n    <Accordion mdxType=\"Accordion\">\n      <AccordionItem header=\"Full code sample\" isChevronIcon position=\"right\" iconColor=\"#1473E6\" mdxType=\"AccordionItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`const axios = require(\"axios\");\n\n// Ensure ACCESS_TOKEN environment variable is there with the correct value of access token\nconst { ACCESS_TOKEN } = process.env;\n\n// REST API's status codes\nconst STATUS_ACCEPTED = 202;\nconst DEFAULT_SERVICE_BASE_URL = \"https://ff-services-api-stage.adobe.io\";\n\n// object containing api endpoints\nconst apiEndpoints = {\n  FILL_MASKED_AREAS: \"/v1/fill-masked-areas\",\n};\n\n/**\n * Function to make get api call\n * @param {string} url - Api end point\n * @param {object} headers - headers to be passed\n * @returns {Promise} - Response of the API call\n */\nfunction makeGetCall(url, headers) {\n  return axios.get(url, { headers });\n}\n\n/**\n * Function to make post api call\n * @param {string} url - Api end point\n * @param {object} payload - Payload to be passed\n * @param {object} headers - Headers to be passed\n * @returns {Promise} - Response of the API call\n */\nfunction makePostCall(url, payload, headers) {\n  return axios.post(url, payload, { headers });\n}\n\n/**\n * Function to make service api calls\n *  - post api call to get the status url\n *  - get api call to get the result\n * @param {string} url - Api end point\n * @param {object} payload - Payload to be passed\n * @param {object} headers - Headers to be passed\n * @returns {Promise} - Object of image urls and its properties\n */\nasync function makeServiceApiCall(url, payload, headers) {\n  const postResponse = await makePostCall(url, payload, headers);\n  if (postResponse.status === STATUS_ACCEPTED) {\n    const statusUrl = postResponse.data.statusUrl;\n    const getResult = await makeGetCall(statusUrl, headers);\n    return getResult.data;\n  } else {\n    console.log(\"Error in serviceApiCall post operation \", postResponse);\n  }\n}\n\n/**\n * Function to fill masked areas of image based on the masks provided\n * @param {object} payload - payload with image and masks\n * @param {object} headers - headers to be passed\n * @returns {Promise} - result of the api response\n */\nasync function fillMaskedArea(headers, serviceBaseUrl, payload) {\n  const endpoint = new URL(\n    apiEndpoints.FILL_MASKED_AREAS,\n    serviceBaseUrl\n  ).toString();\n  return makeServiceApiCall(endpoint, payload, headers);\n}\n\n/**\n * Function to fetch token\n * @returns {Promise} - token string\n */\nasync function fetchAccessToken() {\n  return \\`Bearer \\${ACCESS_TOKEN}\\`;\n}\n\n/**\n * Function to generate headers\n * @returns {Promise} - headers object\n */\nasync function generateHeaders() {\n  const token = await fetchAccessToken();\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    // Update X-Api-Key with the actual api key\n    \"X-Api-Key\": \"<your_api_key>\",\n    Authorization: token,\n  };\n  return headers;\n}\n\nasync function main() {\n  // update serviceBaseUrl\n  const serviceBaseUrl = \"<your_service_base_url>\" || DEFAULT_SERVICE_BASE_URL;\n  // update sourceImageUrl with the source image url\n  const sourceImageUrl = \"<your_source_image_url>\";\n  // update maskUrlArray with the mask urls\n  const maskUrlArray = [\"<your_mask_url>\"];\n  const headers = await generateHeaders();\n\n  const payload = {\n    image: {\n      source: {\n        url: sourceImageUrl\n      }\n    },\n    masks: maskUrlArray.map((mask) => ({\n      source: {\n        url: mask\n      }\n    }))\n  };\n  const result = await fillMaskedArea(headers, serviceBaseUrl, payload);\n  const finalImage = result.image.destination.url;\n  return finalImage;\n}\n\nmain();\n`}</code></pre>\n      </AccordionItem>\n    </Accordion>\n    {/* Links */}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","Accordion","AccordionItem","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","header","isChevronIcon","position","iconColor","isMDXComponent"],"sourceRoot":""}