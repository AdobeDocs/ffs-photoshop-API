{"version":3,"file":"component---src-pages-getting-started-index-md-5b97d6c289d7dba976d4.js","mappings":"yTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,kBACJ,mBACJA,EAAAA,EAAAA,KAAA,SAAI,uIACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,YACJ,aACJA,EAAAA,EAAAA,KAAA,SAAI,iVACJA,EAAAA,EAAAA,KAAA,SAAI,yDACJA,EAAAA,EAAAA,KAAA,SAAI,ucACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBACJ,kBACJA,EAAAA,EAAAA,KAAA,SAAI,8DACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,OAAMH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KACrC,KAAQ,gCACN,2BAA+B,cACrCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,MAAKH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KACpC,KAAQ,sFACN,WAAe,wBAAuBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KACtD,KAAQ,kGACN,6CAAiD,MACvDH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,mBAAkBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAM,aAAsB,SAAQH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAM,iBAA0B,cAAaH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,KACxK,KAAQ,+GACN,mCAAuC,6FAE/CH,EAAAA,EAAAA,KAAA,MACE,GAAM,4BACJ,6BACJA,EAAAA,EAAAA,KAAA,SAAI,yDAAwDA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACtE,KAAQ,gHACN,iEAAqE,wCAE3EH,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,kDAAiDH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAM,aAAsB,SAAQH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAM,iBAA0B,uEAElLH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,kHAGNH,EAAAA,EAAAA,KAAA,MACE,MAAS,IAETA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,wEAEvBH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,yTAONH,EAAAA,EAAAA,KAAA,SAAI,iCACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,aAA0B,qBAC3EH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,iBAA8B,yBAC/EH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,SAAsB,qBAAoBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,UAAuB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,WAAwB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,sBAAmC,OAEhRH,EAAAA,EAAAA,KAAA,SAAI,sCACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,oHAMNH,EAAAA,EAAAA,KAAA,SAAI,qHACJA,EAAAA,EAAAA,KAAA,MACE,MAAS,IAETA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,0DAEvBH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,8DAENH,EAAAA,EAAAA,KAAA,MACE,GAAM,uBACJ,wBACJA,EAAAA,EAAAA,KAAA,SAAI,sEACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,kBACX,4MAKNH,EAAAA,EAAAA,KAAA,SAAI,6BACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,qCAENH,EAAAA,EAAAA,KAAA,SAAI,sEAIR,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/getting_started/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ffs-photoshop-API/ffs-photoshop-API/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Use server-to-server authentication credentials that allow your application's server to generate access tokens and make API calls.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`For your application to generate an access token, an end user doesn't need to sign in or provide consent to your application. Instead, your application can use its credentials (Client ID and Secret) to authenticate itself and generate access tokens. Your application can then use these to call Adobe APIs and services on its behalf.`}</p>\n    <p>{`This is sometimes referred to as \"two-legged OAuth\".`}</p>\n    <p>{`Automate your token generation by calling the endpoint using standard OAuth2 libraries. Using industry-standard libraries is the quickest and most secure way of integrating with OAuth. Be diligent when choosing the OAuth 2.0 library that works best for your application. Your teams' projects likely leverage OAuth libraries already to connect with other APIs. It's recommended to use these libraries to automatically generate tokens when they expire.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Work with your Adobe representative to get the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/\"\n        }}>{`Adobe Developer Console`}</a>{` account.`}</li>\n      <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/projects/projects-empty/\"\n        }}>{`project`}</a>{` with Photoshop API `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/\"\n        }}>{`OAuth Server-to-Server credentials set up`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Access to your `}<strong parentName=\"li\">{`Client ID`}</strong>{` and `}<strong parentName=\"li\">{`Client Secret`}</strong>{` from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n        }}>{`Adobe Developer Console project`}</a>{`. Securely store these credentials and never expose them in client-side or public code.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an access token`}</h2>\n    <p>{`A temporary access token validates calls to the API. `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s#generate-token\"\n      }}>{`This token can be generated directly in the Developer Console`}</a>{`,\nor by following the steps below.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`First, open a secure terminal and export your `}<strong parentName=\"li\">{`Client ID`}</strong>{` and `}<strong parentName=\"li\">{`Client Secret`}</strong>{` as environment variables so that later commands can access them:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export PS_FF_SERVICES_CLIENT_ID=<Your_Client_ID>\nexport PS_FF_SERVICES_CLIENT_SECRET=<Your_Client_Secret>\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Generate access tokens programmatically by sending a POST request:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X POST 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\\\n-d 'grant_type=client_credentials' \\\\\n-d \"client_id=$PS_FF_SERVICES_CLIENT_ID\" \\\\\n-d \"client_secret=$PS_FF_SERVICES_CLIENT_SECRET\" \\\\\n-d 'scope=openid,AdobeID,read_organizations'\n`}</code></pre>\n    <p>{`The required parameters are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_id`}</inlineCode>{`: The Client ID.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_secret`}</inlineCode>{`: The Client secret.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`scope`}</inlineCode>{`: The scopes are `}<inlineCode parentName=\"li\">{`openid`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`AdobeID`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`read_organizations`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"access_token\": \"exampleAccessTokenAsdf123\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 86399\n}\n`}</code></pre>\n    <p>{`Each access token is valid for 24 hours. To adhere to OAuth best practices, generate a new token every 23 hours.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Export your access token as an environment variable:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export PS_FF_SERVICES_ACCESS_TOKEN=<Your_Access_Token>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"execute-an-api-call\"\n    }}>{`Execute an API call`}</h2>\n    <p>{`Once you've created your token, you can make your first API call:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --request GET \\\\\n  --url https://image.adobe.io/pie/psdService/hello \\\\\n  --header \"Authorization: Bearer $PS_FF_SERVICES_ACCESS_TOKEN\" \\\\\n  --header \"x-api-key: $PS_FF_SERVICES_CLIENT_ID\"\n`}</code></pre>\n    <p>{`You'll see the response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`Welcome to the Photoshop API!\n`}</code></pre>\n    <p>{`Congratulations! You made your first request to the Photoshop API.`}</p>\n    {/* Links */}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}